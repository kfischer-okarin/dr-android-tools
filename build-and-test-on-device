#!/bin/bash

source $(dirname $0)/lib/common.sh

game_directory="mygame"
min_sdk_version="26"

while [[ $# -gt 0 ]]; do
  case $1 in
    --help)
      echo "Usage: $executable_name [<game-directory>] [--min-sdk-version <min-sdk-version>]"
      echo
      echo "Builds and installs the game on a connected Android device."
      echo
      echo "If <game-directory> is not specified, 'mygame' is used."
      echo "Use the ANDROID_SERIAL environment variable to specify the device if there are multiple devices connected."
      exit
      ;;
    --min-sdk-version)
      min_sdk_version=$2
      shift
      shift
      ;;
    *)
      game_directory=$1
      shift
      ;;
  esac
done

DEV_KEYSTORE_PATH=./android/dev_keystore.jks
DEV_KEYSTORE_PASSWORD=mygame

if [ ! -f $DEV_KEYSTORE_PATH ]; then
  log "Generating dev keystore at $DEV_KEYSTORE_PATH"
  keytool -genkeypair -v \
          -keystore $DEV_KEYSTORE_PATH \
          -keyalg RSA \
          -keysize 2048 \
          -validity 10000 \
          -alias mygame \
          -storepass $DEV_KEYSTORE_PASSWORD \
          -dname "CN=mygame, OU=mygame, O=mygame, L=mygame, S=mygame, C=us"
fi

gameid=$(get_metadata $game_directory gameid)
packageid=$(get_metadata $game_directory packageid)

./dragonruby-publish --package --platforms=googleplay $game_directory

java -jar ./android/bundletool.jar build-apks \
     --bundle=./builds/$gameid-googleplay.aab \
     --output=./builds/app.apks \
     --mode=universal

mv ./builds/app.apks ./builds/app.zip
rm -rf ./builds/tmp
mkdir ./builds/tmp
unzip ./builds/app.zip -d ./builds/tmp

apksigner sign \
          --ks $DEV_KEYSTORE_PATH \
          --min-sdk-version $min_sdk_version \
          --ks-pass pass:$DEV_KEYSTORE_PASSWORD \
          ./builds/tmp/universal.apk

adb shell am force-stop $packageid
adb uninstall $packageid || true # In case the app was never installed
adb install ./builds/tmp/universal.apk
adb shell am start -n $packageid/$packageid.DragonRubyActivity

$tools_dir/tail-game-logs $game_directory
